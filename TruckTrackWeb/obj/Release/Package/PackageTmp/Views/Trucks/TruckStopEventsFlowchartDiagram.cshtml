@model TruckTrackWeb.Models.Truck
@{
    ViewBag.Title = "TruckStopEventsFlowchartDiagram";
}
@Styles.Render("~/Content/flowchart/css")
@Scripts.Render("~/bundles/flowchart")

<h2>Truck StopEvents Diagram: @Model.Name </h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("flowchartData", "")
    <div>
        @Html.ActionLink("Back to Details", "Details", new { id = Model.Id })
    </div>
    <hr />
    <div class="flowchart">
        <div class="flowchart-container panzoom" id="flowchart"></div>
    </div>
    <div id="modal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div id="modal-header" class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Default Header</h4>
                </div>
                <div id="modal-body" class="modal-body">
                    <p>Default Body</p>
                </div>
                <div id="modal-footer" class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    var flowchartData = JSON.parse('@ViewBag.FlowchartData'.replace(/&quot;/g, '"'));
    $(document).ready(function () {
        $('#flowchart').flowchart({
            canUserMoveOperators: false,
            canUserEditLinks: false,
            data: flowchartData,
            defaultLinkColor: '#ff5e5e',
            multipleLinksOnInput: true,
            multipleLinksOnOutput: true,
            onAfterChange: function (changeType) {
                saveFlowchartData();
            },
            onLinkSelect: function () {
            },
            onOperatorSelect: function (operatorId) {
                $('#modal-header').html(flowchartData.operators[operatorId].operatorPopup.header);
                $('#modal-body').html(flowchartData.operators[operatorId].operatorPopup.body);
                $('#modal').modal('show');
            },
        });
    });

    function saveFlowchartData() {
        var $flowchart = $('#flowchart');
        document.getElementById('flowchartData').value = JSON.stringify($('#flowchart').flowchart('getData'));
    };

    var $panzoom = $(".panzoom").panzoom();
    $panzoom.parent().on('mousewheel.focal', function (e) {
        e.preventDefault();
        var delta = e.delta || e.originalEvent.wheelDelta;
        var zoomOut = delta ? delta < 0 : e.originalEvent.deltaY > 0;
        $panzoom.panzoom('zoom', zoomOut, {
            increment: 0.1,
            animate: false,
            focal: e,
        });
    });

</script>

